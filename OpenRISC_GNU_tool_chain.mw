At present OpenRISC is supported by a 32-bit GNU tool chain offering C and C++ support with static libraries only. The tool chain is available in two forms
* for bare metal use, based on the newlib library
* for Linux application use, based on the uClibc library. 

The tool chains are available as pre-compiled binaries, and stable source code snapshots and in development versions under SVN.

== Installation ==

The stable versions of the tools are based on binutils 2.20.1, GCC 4.5.1 and GDB 7.2. For the bare metal tool chain, they use newlib 0.18.0 and for the Linux application tool chain uClibc 0.9.32. Both tool chains are tested using or1ksim-0.5.1. 

=== Precompiled binaries ===

Pre-compiled binaries are only available for the 1.0rc1 version of the Newlib toolchain. All commands have the prefix or32-elf- (for example or32-elf-gcc). Or1ksim 0.5.1 and newlib 0.18.0 are included.
* [ftp://ocuser:oc@opencores.org/toolchain/or32-elf-1.0rc1-x86.tar.bz2 for Ubuntu x86/i686 (32-bit)]
* [ftp://ocuser:oc@opencores.org/toolchain/or32-elf-1.0rc1-CentOS-x86_64.tar.bz2 for CentOS-5.5 x86_64 (64-bit)]
* [ftp://ocuser:oc@opencores.org/toolchain/or32-elf-1.0rc1-OS_X-10.6.3.tar.bz2 for OS X 10.6 (Snow Leopard)] ('''Note.''' no C++ libraries)

The following commands indicate how to install the toolchain from the download archive. The tools are installed to the /opt path and symbolic links are created to more general path names (which helps with switching to more updated versions of the toolchain later.) The shell's PATH environment variable must be updated. You may choose to install in any other directory to which you have write access.

 cd /opt
 tar xjf ''path to downloaded archive''/''archive name''
 sudo ln -s or32-elf-1.0rc1 or32-elf
 sudo ln -s or1ksim-0.5.1rc1 or1ksim

Having installed the software, add the relevant directories to your path. Under sh or bash use

 export PATH=$PATH:/opt/or32-elf/bin:/opt/or1ksim/bin

Under csh or tcsh use:

 setenv PATH $PATH:/opt/or32-elf/bin:/opt/or1ksim/bin

These will typically be added to your .profile or .login file as appropriate. Note. If the toolchain was installed in a directory other than /opt, substitute that directory's path for /opt.

=== Installation from source ===

==== Prerequisites ====

Various libraries are required to compile the GNU tools. The following is a command for Ubuntu/Debian-based GNU/Linux systems to ensure the required libraries are installed. 

 sudo apt-get -y install build-essential make gcc g++ flex bison patch texinfo libncurses-dev libmpfr-dev libgmp3-dev libmpc-dev libzip-dev

Fedora/Red Hat/Centos-based Linux systems use yum:

 sudo yum install build-essential make gcc g++ flex bison patch texinfo libncurses-dev libmpfr-dev libgmp3-dev libmpc-dev libzip-dev

Please update this Wiki if any tools are missing, or to provide a one-liner to install the required prerequisites on another distribution.

The [[Or1ksim]] library is needed by GDB (as its simulator), so this should be installed first. See the [[Or1ksim]] page for details. Note that you will not be able to run the Or1ksim tests ('''make check''') until the tool chain has been installed.

==== Downloading the source ====

The source for the GNU tools and newlib is available under SVN:

 svn co http://opencores.org/ocsvn/openrisc/openrisc/trunk/gnu-src 

Note. There is a known problem with SVN timing out, so that not all files may be downloaded. Repeatedly run the following command until no more files are downloaded.

 svn update gnu-src

The source for uClibc and Linux (needed for the header files for the tool chain) is currently held in a [http://git-scm.com/ git] repository run by [http://southpole.se/ South Pole]. It is best to save the source for these into the gnu-src path just created when checking out from the OpenCores SVN repository.

 cd gnu-src
 git clone git://git.openrisc.net/jonas/uClibc
 git clone git://git.openrisc.net/jonas/linux 

==== Building ====

There are two toolchains that can be compiled using different libraries.
* The newlib toolchain, with toolchain executables prefixed by or32-elf- is for compiling applications which will be run on the bare metal, or without an operating system (this includes building the Linux kernel).
* The uClibc toolchain, with toolchain exeutables prefixed by or32-linux- is for compiling software intended to run on Linux, as userspace applications.

The script used to build the toolchains is bld-all.sh and it is found in the gnu-src/ path. It will create a unified build environment when compiling the GNU tools (binutils, GCC, GDB.). For a full list of options provided by the build script, run it with the --help option.

 ./bld-all.sh --help 

The following instructions assume the tools are installed in /opt/openrisc, which is a common choice (/opt/or32 is also popular). Substitute your chosen installation directory in the following instructions. It is assumed that [[Or1ksim]] has been installed in /opt/or1ksim.

To build and install both tool chains from scratch:

 ./bld-all.sh --force --prefix /opt/openrisc --or1ksim-dir /opt/or1ksim --uclibc-dir uClibc --linux-dir linux 

To build and install just hte newlib tool chain:

 ./bld-all.sh --force --prefix /opt/openrisc --or1ksim-dir /opt/or1ksim --no-uclibc --no-or32-linux 

To build and install just the uClibc tool chain:

 ./bld-all.sh --force --prefix /opt/openrisc --or1ksim-dir /opt/or1ksim --uclibc-dir uClibc --linux-dir linux --no-newlib --no-or32-elf 

Add the new tools to the path. Under sh or bash

 export PATH=$PATH:/opt/openrisc/bin

Under csh or tcsh

 setenv PATH $PATH:/opt/openrisc/bin

These commands will typically be added to your .profile or .login file.

'''Note.''' Some users have reported problems when rebuilding the uClibc tool chain a second time, due to the existing headers on the search path. The solution is to remove the existing implementation from the PATH variable.

=== Support for non-Linux systems ===

==== Microsoft Windows with Cygwin ====

At present only the older pre-compiled OpenRISC toolchains exist for Cygwin. The OpenRISC project currently does not have a maintainer for the toolchain on the Cygwin platform. Without one it is not certain that each toolchain release will be built for Cygwin.

If you would like to contribute to the project by maintaining a build script and guide for Cygwin platforms, please contact the OpenRISC team.

==== Apple Mac OS X ====

Robert Guenzel has provided an [http://chschroeder.gamiro.de/rg/or1ksim_macOS10.4.pdf application note] on building the toolchain (excluding GDB) for Mac OS 10.4. Users will find this provides valuable additional information beyond the instructions above.

== Tools ==

=== binutils ===

This is a collection of tools for the manipulation of object code in various object file formats. Among its many tools, it provides the assembler and linker.

Version 2.20.1 of binutils, 2.20.1, has been ported to OpenRISC and can be [http://www.opencores.org/ocsvn/openrisc/openrisc/trunk/gnu-src/binutils-2.20.1 downloaded from SVN].

More information about the GNU project's release of binutils can be found at its [http://www.gnu.org/software/binutils/ GNU homepage].

=== GCC ===

=== GDB ===

== Libraries ==

=== newlib ===

=== uClibc ===

== Testing ==

=== Newlib tool chain ===

=== uClibc tool chain ===
