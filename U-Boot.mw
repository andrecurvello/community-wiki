= About =

Das U-Boot, the universal bootloader, is a popular bootloader for embedded systems. For information about the project itself see its [http://www.denx.de/wiki/U-Boot webpage].

This page contains information about the OpenRISC 1000 architecture port and board additions.

= Downloading =

The u-boot code with basic OpenRISC 1000 support is found on the openrisc.net git tree.

 <nowiki>git clone git://openrisc.net/stefan/u-boot</nowiki>

= Creating a Linux kernel boot image =

To create a u-boot Linux kernel boot image, a tool called mkimage is used.
It is available in u-boot's tools/ directory and the following command can be used to create a not compressed kernel image called 'uImage' with load address at 0 and entry point at 0x100
 <nowiki>tools/mkimage -n 'Linux for OpenRISC' -A or1k -O linux -T kernel -C none -a 0 -e 0x100 -d /path/to/vmlinux.bin uImage</nowiki>

= Creating a bare metal boot image =
To create a u-boot image from a baremetal program, the u-boot tool call mkimage is used.
It is available in u-boot's tools/ directory and the following command can be used to create a not compressed bare metal image called 'helloWorld' with load address 0 and entry point at 0x100
 <nowiki>mkimage -A or1k -T standalone -C none -a 0 -e 0x100 -n helloWorld -d hello.bin uImage</nowiki>
== Downloading the image to the board ==
The following will use NFS to download this image to the board. Ensure you have NFS set up and accessible somewhere on your machine. Copy the resulting file from the previous step, uImage, there.
So long as the board has network access, set the following in u-boot:
 <nowiki>set serverip 192.168.1.65
set bootfile "/path/to/your/nfs/share/uImage"
set loadaddr 100000</nowiki>
The above assumes your host machine (running the NFS server) is at 192.168.1.65 - change this to the appropriate IP in your case. The program will be saved into RAM at the 1MB mark (0x100000). Now run the NFS download program:
 <nowiki>==> nfs
ethoc
Using ETHOC-0 device
File transfer via NFS from server 192.168.1.65; our IP address is 192.168.1.72
Filename '/home/user/path/to/uImage'.
Load address: 0x100000
Loading: ################
done
Bytes transferred = 80176 (13930 hex)</nowiki>

Your exact details may vary.

== Running the image from RAM ==

This image can then be booted from that address with

 <nowiki>bootm 100000</nowiki>

== Saving the image to flash and booting it ==

Or we can copy it to the 1MB mark in flash memory with the following:

 <nowiki>protect off all
erase f0100000 +20000
cp 100000 f0100000 13930
protect on all</nowiki>

We copied 80176 bytes (13930 hex) to the 1MB mark in flash (address 0xf0100000) from RAM address at 1MB.

This image can now be booted with:

 <nowiki>bootm f0100000</nowiki>

= Booting from tftp =

First, the net settings have to be setup. There are two ways of doing this.
One way is to edit the configuration file for the active board port, which is located at '''include/configs/boardname.h'''
The other way is to edit them by using the ''setenv'' command. To see the current settings, use the ''printenv'' command.
When u-boot's net configuration is properly setup, and a tftp server is running, the following command is used to load the file uImage into RAM.
 <nowiki>tftpboot uImage</nowiki>
When the image has finished loading, it can be booted by using the ''bootm'' command.
 <nowiki>bootm</nowiki>

= Supported boards =

The supported boards so far are board ports from [[ORPSoC]].

== ordb1a3pe1500 ==
This board is the [[FPGA_Development_Boards#ORSoC_OpenRISC_development_board | ORSoC Actel development board ]] with an A3PE1500 Actel part on it.

The board config is far from complete, see the file include/configs/ordb1a3pe1500.h for more information on the config.

To build for this board run:
 <nowiki>make ordb1a3pe1500_config
make</nowiki>

== ml501 ==
This board is a [[FPGA_Development_Boards#Xilinx_ML501 | Xilinx Virtex 5 development board]].

 <nowiki>make ml501_config
make</nowiki>

== atlys ==
This board is a [[FPGA_Development_Boards#Digilent_Atlys | Xilinx Spartan 6 development board from Digilent]].

 <nowiki>make atlys_config
make</nowiki>

== de0_nano ==
This board is a [[FPGA_Development_Boards#Terasic_DE0_Nano | Altera Cyclone IV development board from Terasic]].

 <nowiki>make de0_nano_config
make</nowiki>

= How to create your own board port =
To add your own board port follow these steps. We will use the atlys board as a starting point, and we will call our new board 'myboard':
 <nowiki>1) copy u-boot/include/configs/atlys.h to u-boot/include/configs/myboard.h
2) copy the folder u-boot/board/atlys to u-boot/board/myboard
3) add 'myboard' to u-boot/boards.cfg in a similar way as the 'atlys' board appears
4) run make myboard_config</nowiki>
